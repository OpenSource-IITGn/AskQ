type Mutation {
  signUp(
    email: String!
    password: String!
    userName: String!
  ): QueryResponse!
  signIn(email: String!, password: String!): SignInResponse!
  changePassword(password: String!): QueryResponse!
  changeProfile(userName: String, firstName: String, lastName: String, avatar: String): QueryResponse!
  createPost(posttype: Int!, title: String, body: String!, tags: [String]): QueryResponse!
  updatePost(pid: ID!, title: String, body: String!, tags: [String]): QueryResponse!
  deletePost(pid: ID!): QueryResponse!
  createComment(pid: ID!, body: String!): QueryResponse
  updateComment(cid: ID!, body: String!): QueryResponse!
  deleteComment(cid: ID!): QueryResponse!
}


type QueryResponse {
  ok: Int!
  error: String
}

type SignInResponse {
  ok: Boolean!
  error: String
  token: String
}
# Base user type
type User {
  id: ID!
  email: String!
  username: String!
  firstname: String
  lastname: String
  avatar: String
  createdAt: String!
  updatedAt: String!
}

# Type Comment
# Note: Removed Post as Comment cannot be used to find post
type Comment {
	id: ID!
	user: User
	body: String!
	createdAt: String!
	updatedAt: String!
}

# A post can be Answer or Question
# PostType is an Int
# Question : 0
# Answer : 1

# Post Type
type Post {
	id: ID!
	posttype: Int!
	user: User
	body: String!
	vote: Int!
	comments: [Comment]
	title: String
	tags: [String]!
	answers: [Post]
	createdAt: String!
	updatedAt: String!
}

# Query
type Query {
	getMyProfile: GetProfileResponse!
	getProfile(username: String!): GetProfileResponse!
	getPosts(query: String, first: Int!, offset: Int!, user: ID): GetPostsResponse!
	getQuestions(query: String, first: Int!, offset: Int!, user: ID): GetPostsResponse!
	getAnswers(query: String, first: Int!, offset: Int!, user: ID): GetPostsResponse!
	getPostDetailsByID(pid: ID!): GetPostResponse!
}

type GetPostResponse {
	ok: Boolean!
	error: String
	post: Post
}

# Response for all requests is same
type GetPostsResponse {
	ok: Boolean!
	error: String
	posts: [Post]
}

# Get profile
type GetProfileResponse {
  ok: Int!
  error: String
  user: User
}